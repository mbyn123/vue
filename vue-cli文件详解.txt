那匹马vue
|-- build : webpack 相关的配置文件夹(基本不需要修改)
|-- dev-server.js : 通过 express 启动后台服务器
|-- config: webpack 相关的配置文件夹(基本不需要修改)
|-- index.js: 指定的后台服务的端口号和静态资源文件夹
|-- node_modules
|-- src : 源码文件夹
|-- components: vue 组件及其相关资源文件夹
|-- App.vue: 应用根主组件
|-- main.js: 应用入口 js
|-- static: 静态资源文件夹
|-- .babelrc: babel 的配置文件
|-- .eslintignore: eslint 检查忽略的配置
|-- .eslintrc.js: eslint 检查的配置
|-- .gitignore: git 版本管制忽略的配置
|-- index.html: 主页面文件
|-- package.json: 应用包配置文件
|-- README.md: 应用描述说明的 readme文件



一开始只有两个选项: default(默认配置)和Manually select features(手动配置)

 ? Check the features needed for your project: (Press <space> to select, <a> to toggle all, <i> to invert selection) 
 
 // 检查项目所需的功能:(按<space>选择，<a>切换所有，<i>反转选择）
  
>( ) TypeScript                                 // 支持使用 TypeScript 书写源码
  
 ( ) Progressive Web App (PWA) Support          // PWA 支持
  
 ( ) Router                                     // 支持 vue-router
  
 ( ) Vuex                                       // 支持 vuex
   
( ) CSS Pre-processors                         // 支持 CSS 预处理器。
  
 ( ) Linter / Formatter                         // 支持代码风格检查和格式化。
   
( ) Unit Testing                               // 支持单元测试。
  
 ( ) E2E Testing  

 选择Eslint代码验证规则：
> ESLint with error prevention only
  ESLint + Airbnb config
  ESLint + Standard config
  ESLint + Prettier

选择e2e测试:
? Pick a E2E testing solution: (Use arrow keys)
? Cypress (Chrome only) 
  Nightwatch (Selenium-based) 

. 选择什么时候进行代码规则检测：
  ? Pick additional lint features: (Press <space> to select, <a> to toggle all, <i> to invert selection)
  >( ) Lint on save // 保存就检测
   ( ) Lint and fix on commit // fix和commit时候检查

? Pick a E2E testing solution: (Use arrow keys)
? Cypress (Chrome only) 
  Nightwatch (Selenium-based) 


把babel,postcss,eslint这些配置文件放哪：通常我们会选择独立放置，让package.json干净些
  ? Where do you prefer placing config for Babel, PostCSS, ESLint, etc.? (Use arrow keys)
  > In dedicated config files // 独立文件放置
    In package.json // 放package.json里




创建 vue -cli项目：
npm install -g vue-cli
vue init webpack vue_demo
cd vue_demo
npm install
npm run dev
访问: http://localhost:8080/

卸载旧版本vue-cli
npm uninstall vue-cli -g

检查当前版本
vue --version
vue -V

安装cli3.x
npm install -g @vue/cli

创建项目
vue create + 项目名 

启动项目
npm run serve 



检查node版本
node -v

打包：
npm run build

发布：
serve dist
访问: http://localhost:5000

安装pubsub库发布订阅消息
npm install --save pubsub-js

安装axios库
npm install axios














